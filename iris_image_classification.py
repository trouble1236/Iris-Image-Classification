# -*- coding: utf-8 -*-
"""Iris_image_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19vtXFW3snIsBpblJg88V270Pfq2wFls7

*   This program implements image classification algorithm to classify Iris flowers into categories - Setosa, Virginica, and Versicolor.
"""

# import external libraries

import pandas as pd

"""Download the Iris flower dataset from [here](https://drive.google.com/file/d/1szyHUTHWr757HeI4e_H4Fd9tAGwAqVPP/view?usp=sharing) and save locally to upload below"""

from google.colab import files
uploaded = files.upload()

# read CSV file

data = pd.read_csv('iris.csv',header=None,encoding='utf-8')

"""Explore data"""

# how many attributes (columns) and instances (rows)
#data.shape 

#print top rows of data
#data.head()   

#statistical summary of data
data.describe()

"""Extract features and labels and explore"""

features = data.iloc[:,:4]   # extract all rows and column index 0 to 3 (4th one not included)
label = data.iloc[:,4]       # extract all rows and column index 4

print(features)
#print(label)

"""Split dataset as training and testing to evaluate the model - training (80%) and testing (20%)"""

from sklearn.model_selection import train_test_split

X_train,X_test,Y_train,Y_test=train_test_split(features,label,test_size=0.2,stratify=label)

"""Build the model using AI algorithm - Logistic Regression, train and measure the accuracy"""

from sklearn.linear_model import LogisticRegression

clf= LogisticRegression()
clf.fit(X_train,Y_train)  #training

"""Model evaluation"""

# measure the accuracy

clf.score(X_test, Y_test)

"""Predict the species of Iris flower based on the features passed to the model in the order of sepal length, sepal width, petal length, petal width"""

predict = clf.predict([[5.3,2.3,2.0,1.2]]) #sepal length, sepal width, petal length, petal width
print(" ".join(predict))